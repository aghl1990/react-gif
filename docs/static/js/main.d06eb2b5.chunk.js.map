{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAoBRC,mBAAS,IApBD,mBAoBrCC,EApBqC,KAoBzBC,EApByB,KAsB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMlB,SAGE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCZlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAEd,SAAAC,GAAO,IAAD,EACF,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAd3B,kBAqBTM,GArBS,4CAAH,sDCEPO,EAAU,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC9B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAGbd,mBACrB,CACIqB,KAAM,GACNa,SAAS,IANqB,mBAG/BC,EAH+B,KAGzBC,EAHyB,KAyBtC,OAfAC,qBAAU,WACNxB,EAASC,GAAWwB,MAChB,SAAAC,GAGQH,EAAS,CACDf,KAAMkB,EACNL,SAAS,SAI9B,CAACpB,IAIGqB,EDvBwBK,CAAa1B,GAAhCa,EADuB,EAC5BN,KAAaa,EADe,EACfA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAkEhB,GAAXA,GAEtDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KACH,SAACC,GAAD,OACC,cAAC,EAAD,eAEGA,GAFaA,EAAIC,aEdhCgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAK9B,OACI,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BAEM2C,EAAWnB,KACX,SAAAT,GAAQ,OACJ,cAAC,EAAD,CAA0BA,SAAYA,GAAtBA,Y,MCdpC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d06eb2b5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    // const handledAdd = () => {\r\n    //     // setcategories( ['Hunter X',...categories]);\r\n    //     // setcategories( [...categories,'Hunter X']);\r\n    //     setcategories(cats =>[...categories,'Hunter X']);\r\n    // }\r\n\r\n    const handledInputChange = (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const habdledSubmit =(e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setcategories(cats =>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }}\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    return (\r\n        <form onSubmit={habdledSubmit}>\r\n          {/* <h1>{inputValue}</h1> */}\r\n          {/* <h2>Add Category</h2> */}\r\n          <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={\r\n                handledInputChange\r\n            }\r\n\r\n          /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rcAJ4GkCq6FWasB6upwvnBeD2SjY6n7s`;\r\n     \r\n\r\n    const resp = await fetch(url);\r\n    \r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(\r\n\r\n        img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }\r\n\r\n    );\r\n    //   console.log(gifs);\r\n    //  setimages(gifs);\r\n       return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifItem } from './GifItem' \r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" key={category}>{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                 \r\n                {\r\n                    images.map(\r\n                        (img) =>\r\n                        (<GifItem key = {img.id} \r\n                        //  img={img}\r\n                        {...img} \r\n                        />) \r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\" \r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    \r\n    const [state,setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then(\r\n            imgs =>{\r\n            \r\n                // setTimeout(() => {\r\n                    setState({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n                // }, 3000); \r\n            })\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch','Samurai X','Dragon ball'];\r\n    const [categories, setcategories] = useState(['One punch'])\r\n     \r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <hr/> \r\n          <AddCategory setcategories = {setcategories} />\r\n          \r\n          <ol >\r\n              {\r\n                categories.map(\r\n                category => (\r\n                    <GifGrid key = {category} category = {category} />\r\n                )\r\n                )\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'; \n\nReactDOM.render( \n    <GifExpertApp/>,\n    document.getElementById('root')\n); \n"],"sourceRoot":""}